% A ConTeXt MkIV module

% from file: conclusion.tex after line: 0

%C Copyright 2019 PerceptiSys Ltd (Stephen Gaito)
%C
%C Permission is hereby granted, free of charge, to any person
%C obtaining a copy of this software and associated documentation
%C files (the "Software"), to deal in the Software without
%C restriction, including without limitation the rights to use,
%C copy, modify, merge, publish, distribute, sublicense, and/or sell
%C copies of the Software, and to permit persons to whom the
%C Software is furnished to do so, subject to the following
%C conditions:
%C
%C    The above copyright notice and this permission notice shall
%C    be included in all copies or substantial portions of the
%C    Software.
%C
%C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%C EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%C OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%C NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%C HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%C WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%C FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%C OTHER DEALINGS IN THE SOFTWARE.

% from file: preamble.tex after line: 0

%C Copyright 2019 PerceptiSys Ltd (Stephen Gaito)
%C
%C Permission is hereby granted, free of charge, to any person
%C obtaining a copy of this software and associated documentation
%C files (the "Software"), to deal in the Software without
%C restriction, including without limitation the rights to use,
%C copy, modify, merge, publish, distribute, sublicense, and/or sell
%C copies of the Software, and to permit persons to whom the
%C Software is furnished to do so, subject to the following
%C conditions:
%C
%C    The above copyright notice and this permission notice shall
%C    be included in all copies or substantial portions of the
%C    Software.
%C
%C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%C EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%C OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%C NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%C HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%C WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%C FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%C OTHER DEALINGS IN THE SOFTWARE.

% from file: preamble.tex after line: 0

%D \module
%D   [     file=t-literate-progs,
%D      version=2017.05.10,
%D        title=\CONTEXT\ User module,
%D     subtitle=Literate Programming in \ConTeXt,
%D       author=Stephen Gaito,
%D         date=\currentdate,
%D    copyright=PerceptiSys Ltd (Stephen Gaito),
%D        email=stephen@perceptisys.co.uk,
%D      license=MIT License]

% begin info
%
% title   : Literate Programming in ConTeXt
% comment : Provides structured document and code generation
% status  : under development, mkiv only
%
% end info

\usemodule[high-cpp]

\unprotect

\ctxloadluafile{t-literate-progs}
\ctxloadluafile{t-literate-progs-templates}
\ctxloadluafile{t-literate-progs-config}

% from file: codeManipulation.tex after line: 0

\unexpanded\def\defineLitProgs{
  \dotripleempty\doDefineLitProgs
}

\unexpanded\def\doDefineLitProgs[#1][#2][#3]{
  \ifthirdargument%
    \doDefineLitProgsTriple{#1}{#2}{#3}%
  \else\ifsecondargument%
    \doDefineLitProgsDouble{#1}{#2}%
  \else\iffirstargument%
    \doDefineLitProgsSingle{#1}%
  \else%
    \doDefineLitProgsZero%
  \fi\fi\fi%
}

\unexpanded\def\doDefineLitProgsTriple#1#2#3{
  \definetyping[#1][#2][#3]
  \fixLitProgs{#1}
}

\unexpanded\def\doDefineLitProgsDouble#1#2{
  \definetyping[#1][#2]
  \fixLitProgs{#1}
}

\unexpanded\def\doDefineLitProgsSingle#1{
  \definetyping[#1]
  \fixLitProgs{#1}
}

\unexpanded\def\doDefineLitProgsZero{
  \errmessage{
    \string\\defineLitProgs
    requires at least one argument,
    you have provided none.
  }
}

% from file: codeManipulation.tex after line: 100

\unexpanded\def\buff_verbatim_type_block#1#2%
  {\buff_pickup{_typing_}{#1}{#2}{}%
  {\buff_verbatim_type_block_verbatim_indeed{#1}{#2}}%
  \zerocount}

% from file: codeManipulation.tex after line: 300

\def\fixLitProgs#1{
  \directlua{thirddata.literateProgs.createFixLitProgs('#1')}
}

% from file: codeManipulation.tex after line: 600

\unexpanded\def\setLitProgsOriginMarker{
  \dotripleempty\doSetLitProgsOriginMarker%
}

\unexpanded\def\doSetLitProgsOriginMarker[#1][#2][#3]{
  \ifthirdargument%
    \directlua{
      thirddata.literateProgs.setOriginMarker('#1', '#2', '#3')
    }
  \else\ifsecondargument%
    \directlua{
      thirddata.literateProgs.setOriginMarker('#1', nil, '#2')
    }
  \else\iffirstargument%
    \errmessage{
      \string\\setLitProgsOriginMarker
      requires at least two arguments,
      you have only provided one.
    }
  \else%
    \errmessage{
      \string\\setLitProgsOriginMarker
      requires at least two arguments,
      you have provided none.
    }
  \fi\fi\fi%
}

\def\addMITLicense#1#2#3{
  \directlua{
    thirddata.literateProgs.addMITLicense('#1', '#2', '#3')
  }
}

\def\addApacheLicense#1#2#3{
  \directlua{
    thirddata.literateProgs.addApacheLicense('#1', '#2', '#3')
  }
}

% from file: codeManipulation.tex after line: 800

\definetextbackground[LitProgFrame]
\setuptextbackground%
  [LitProgFrame]%
  [location=paragraph, background=color, backgroundcolor=gray]

% from file: codeManipulation.tex after line: 850

\defineLitProgs%
  [MkIVCode]%
  [ option=context, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [MpIVCode]%
  [ option=mp, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]
 
\defineLitProgs%
  [LuaCode]%
  [option=lua, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [LuaTemplate]%
  [option=lua, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [CHeader]%
  [option=cpp, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [CCode]%
  [option=cpp, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\defineLitProgs%
  [Lmsfile]%
  [option=lua, numbering=line,
    before={\noindent\startLitProgFrame}, after=\stopLitProgFrame
  ]

\setLitProgsOriginMarker[MkIVCode][markMkIVCodeOrigin]
\setLitProgsOriginMarker[MpIVCode][markMpIVCodeOrigin]
\setLitProgsOriginMarker[LuaCode][markLuaCodeOrigin]
\setLitProgsOriginMarker[LuaTemplate][markLuaTemplateOrigin]
\setLitProgsOriginMarker[CHeader][markCHeaderOrigin]
\setLitProgsOriginMarker[CCode][markCCodeOrigin]

% from file: codeManipulation.tex after line: 900

\def\CHeaderIncludeGuard#1#2{
  \directlua{
    thirddata.literateProgs.cHeaderIncludeGuard('#1', '#2')
  }
}

% from file: pathManipulation.tex after line: 0

\def\setEnvironment#1#2{
  \directlua{
    thirddata.literateProgs.setEnvironment('#1', '#2')
  }
}

\def\setEnvironmentDefault#1#2{
  \directlua{
    thirddata.literateProgs.setEnvironmentDefault('#1', '#2')
  }
}

\def\clearEnvironemtn#1{
  \directlua{
    thirddata.literateProgs.clearEnvironment('#1')
  }
}

% from file: lmsfiles.tex after line: 0

\def\addMainDocument#1{
  \directlua{
    thirddata.literateProgs.addMainDocument('#1')
  }
}

\def\addSubDocument#1{
  \directlua{
    thirddata.literateProgs.addSubDocument('#1')
  }
}

\def\ensureDirectoryExists#1{
  \directlua{
    thirddata.literateProgs.ensureDirectoryExists('#1')
  }
}

\def\addDocumentDirectory#1{
  \directlua{
    thirddata.literateProgs.addDocumentDirectory('#1')
  }
}

\def\addLmsfileSubDirectory#1{
  \directlua{
    thirddata.literateProgs.addLmsfileSubDirectory('#1')
  }
}

\def\addConTeXtModuleFile#1{
  \directlua{
    thirddata.literateProgs.addConTeXtModuleFile('#1')
  }
}

\def\addConTeXtModuleDirectory#1{
  \directlua{
    thirddata.literateProgs.addConTeXtModuleDirectory('#1')
  }
}

\def\addCCodeProgram#1{
  \directlua{
    thirddata.literateProgs.addCCodeProgram('#1')
  }
}

\def\addCCodeLibDirectory#1{
  \directlua{
    thirddata.literateProgs.addCCodeLibDirectory('#1')
  }
}

\def\addCCodeLib#1{
  \directlua{
    thirddata.literateProgs.addCCodeLib('#1')
  }
}

\def\addCCodeTargets#1{
  \directlua{
    thirddata.literateProgs.addCCodeTargets('#1')
  }
}

% from file: lmsfiles.tex after line: 200

\def\compileLmsfile#1{
  \directlua{
    thirddata.literateProgs.compileLmsfile('#1')
  }
}

\def\addRecurseTargetsToLmsfile#1{
  \directlua{
    thirddata.literateProgs.addRecurseTargetsToLmsfile('#1')
  }
}

% from file: conclusion.tex after line: 0

\protect \endinput

