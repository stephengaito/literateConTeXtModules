% A ConTeXt MkIV module

% from file: preamble.tex starting line: 16

%D \module
%D   [     file=t-literate-progs,
%D      version=2017.05.10,
%D        title=\CONTEXT\ User module,
%D     subtitle=Literate Programming in \ConTeXt,
%D       author=Stephen Gaito,
%D         date=\currentdate,
%D    copyright=PerceptiSys Ltd (Stephen Gaito),
%D        email=stephen@perceptisys.co.uk,
%D      license=MIT License]

%C Copyright (C) 2017 PerceptiSys Ltd (Stephen Gaito)
%C
%C Permission is hereby granted, free of charge, to any person obtaining a
%C copy of this software and associated documentation files (the
%C "Software"), to deal in the Software without restriction, including
%C without limitation the rights to use, copy, modify, merge, publish,
%C distribute, sublicense, and/or sell copies of the Software, and to
%C permit persons to whom the Software is furnished to do so, subject to
%C the following conditions:
%C
%C The above copyright notice and this permission notice shall be included
%C in all copies or substantial portions of the Software.
%C
%C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
%C OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
%C MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
%C IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
%C CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
%C TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
%C SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

% begin info
%
% title   : Literate Programming in ConTeXt
% comment : Provides structured document and code generation
% status  : under development, mkiv only
%
% end info

\unprotect

\ctxloadluafile{t-literate-progs}
\ctxloadluafile{t-literate-progs-templates}

% from file: codeManipulation.tex starting line: 47

\unexpanded\def\defineLitProgs{%
  \dotripleempty\defineLitProgsDirect%
}

\unexpanded\def\defineLitProgsDirect{%
  \ifthirdargument%
    \noexpand\defineLitProgsTriple%
  \else\ifsecondargument%
    \noexpand\defineLitProgsDouble%
  \else\iffirstargument%
    \noexpand\defineLitProgsSingle%
  \else%
    \noexpand\defineLitProgsZero%
  \fi\fi\fi%
}

\unexpanded\def\defineLitProgsTriple[#1][#2][#3]{
  \definetyping[#1][#2][#3]
  \fixStartLitProgs{#1}
  \fixStopLitProgs{#1}
  \defineLitProgsCreateFile{#1}
  %\defineLitProgsSetup{#1}
}

\unexpanded\def\defineLitProgsDouble[#1][#2][#3]{
  \definetyping[#1][#2]
  \fixStartLitProgs{#1}
  \fixStopLitProgs{#1}
  \defineLitProgsCreateFile{#1}
  %\defineLitProgsSetup{#1}
}

\unexpanded\def\defineLitProgsSingle[#1][#2][#3]{
  \definetyping[#1]
  \fixStartLitProgs{#1}
  \fixStopLitProgs{#1}
  \defineLitProgsCreateFile{#1}
  %\defineLitProgsSetup{#1}
}

\unexpanded\def\defineLitProgsZero[#1][#2][#3]{
  \errmessage{
    \string\\defineLitProgs
    requires at least one argument,
    you have provided none.
  }
}

% from file: codeManipulation.tex starting line: 191

\def\fixStartLitProgs#1{%
  \letvalue{oldStart#1}=\getvalue{start#1}%
  \setuvalue{start#1}{%
    \dosingleempty\getvalue{start#1Direct}%
  }
  \setvalue{start#1Direct}{%
    \iffirstargument%
      \getvalue{start#1Single}%
    \else
      \getvalue{start#1Zero}%
    \fi
  }
  \setvalue{start#1Zero}{%
    \getvalue{start#1Single}[default]%
  }
  \setvalue{start#1Single}[#1]{%
    \directlua{thirddata.literateProgs.setCodeStream('#1')}%
    \getvalue{oldStart#1}%
  }
}

% from file: codeManipulation.tex starting line: 219

\def\fixStopLitProgs#1{%
  \letvalue{oldStop#1}=\getvalue{stop#1}%
  \setvalue{stop#1}{%
    \getvalue{oldStop#1}%
    \directlua{
      thirddata.literateProgs.addCode(
        '#1',
        '_typing_'
      )
    }
  }
}

% from file: codeManipulation.tex starting line: 259

\def\callCreateCodeFile#1#2#3{%
  \directlua{
    thirddata.literateProgs.createCodeFile(
      '#1',
      '#2',
      '#3'
    )
  }
}
\def\defineLitProgsCreateFile#1{%
  \setevalue{create#1File}{%
    \noexpand\callCreateCodeFile #1
  }
}

% from file: mkivCode.tex starting line: 25

\definetyping[MkIVCode]
\setuptyping[MkIVCode][option=tex]

\let\oldStartMkIVCode=\startMkIVCode
\def\startMkIVCode{%
  \directlua{thirddata.literateProgs.markMkIVCodeOrigin()}
  \oldStartMkIVCode%
}

% from file: mkivCode.tex starting line: 66

\definetyping[MkIVAltCode]
\setuptyping[MkIVAltCode][option=tex]

\let\oldStartMkIVAltCode=\startMkIVAltCode
\def\startMkIVAltCode{%
  \directlua{thirddata.literateProgs.markMkIVCodeOrigin()}%
  \oldStartMkIVAltCode%
}

% from file: mkivCode.tex starting line: 80

\let\oldStopMkIVCode=\stopMkIVCode
\def\stopMkIVCode{%
  \oldStopMkIVCode%
 \directlua{thirddata.literateProgs.addMkIVCode('_typing_')}
}

% from file: mkivCode.tex starting line: 91

\let\oldStopMkIVAltCode=\stopMkIVAltCode
\def\stopMkIVAltCode{%
  \oldStopMkIVAltCode%
  \directlua{thirddata.literateProgs.addMkIVCode('_typing_')}
}

% from file: mkivCode.tex starting line: 131

\def\createMkIVFile[#1]{
  \directlua{thirddata.literateProgs.createMkIVFile('#1')}
}

% from file: luaCode.tex starting line: 5

\definetyping[LuaCode]
\setuptyping[LuaCode][option=lua]

\let\oldStartLuaCode=\startLuaCode
\def\startLuaCode{%
  \directlua{thirddata.literateProgs.markLuaCodeOrigin()}%
  \oldStartLuaCode%
}

\let\oldStopLuaCode=\stopLuaCode
\def\stopLuaCode{%
  \oldStopLuaCode%
  \directlua{thirddata.literateProgs.addLuaCode('_typing_')}}

\def\createLuaFile[#1]{
  \directlua{thirddata.literateProgs.createLuaFile('#1')}
}

% from file: luaTemplates.tex starting line: 5

\definetyping[LuaTemplate]
\setuptyping[Template][option=lua]

\let\oldStartLuaTemplate=\startLuaTemplate
\def\startLuaTemplate{%
  \directlua{thirddata.literateProgs.markLuaTemplateOrigin()}%
  \oldStartLuaTemplate%
}

\let\oldStopLuaTemplate=\stopLuaTemplate
\def\stopLuaTemplate{%
  \oldStopLuaTemplate%
  \directlua{thirddata.literateProgs.addLuaTemplate('_typing_')}}

\def\createTemplateFile[#1]{
  \directlua{thirddata.literateProgs.createLuaTemplateFile('#1')}
}

% from file: lakefiles.tex starting line: 9

\definetyping[Lakefile]
\setuptyping[Lakefile][option=lua]

\let\oldStopLakefile=\stopLakefile
\def\stopLakefile{%
  \oldStopLakefile%
  \directlua{thirddata.literateProgs.addLakefile('_typing_')}}

\def\createLakefile[#1]{
  \directlua{thirddata.literateProgs.createLakefile('#1')}
}

% from file: conclusion.tex starting line: 26

\def\createLitProgsTableFile[#1]{
  \directlua{thirddata.literateProgs.createLitProgsTableFile('#1')}
}

\protect \endinput